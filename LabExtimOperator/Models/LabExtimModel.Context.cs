//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabExtimOperator.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LabExtimEntities : DbContext
    {
        public LabExtimEntities()
            : base("name=LabExtimEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Configuration> Configuration { get; set; }
        public virtual DbSet<CustomerOrders> CustomerOrders { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<CustomersMarkUps> CustomersMarkUps { get; set; }
        public virtual DbSet<Dependencies> Dependencies { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Find_Quotations> Find_Quotations { get; set; }
        public virtual DbSet<Find_QuotationTemplates> Find_QuotationTemplates { get; set; }
        public virtual DbSet<ImportFieldMappingInfo> ImportFieldMappingInfo { get; set; }
        public virtual DbSet<ItemDisplayModes> ItemDisplayModes { get; set; }
        public virtual DbSet<ItemTypes> ItemTypes { get; set; }
        public virtual DbSet<Links> Links { get; set; }
        public virtual DbSet<Locks> Locks { get; set; }
        public virtual DbSet<LockTypes> LockTypes { get; set; }
        public virtual DbSet<MacroItemDetails> MacroItemDetails { get; set; }
        public virtual DbSet<MacroItems> MacroItems { get; set; }
        public virtual DbSet<MenuItems> MenuItems { get; set; }
        public virtual DbSet<PickingItems> PickingItems { get; set; }
        public virtual DbSet<Queries> Queries { get; set; }
        public virtual DbSet<QuotationDetails> QuotationDetails { get; set; }
        public virtual DbSet<Quotations> Quotations { get; set; }
        public virtual DbSet<QuotationTemplateDetails> QuotationTemplateDetails { get; set; }
        public virtual DbSet<QuotationTemplates> QuotationTemplates { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<ReportTexts> ReportTexts { get; set; }
        public virtual DbSet<Selectors> Selectors { get; set; }
        public virtual DbSet<SelectorTypes> SelectorTypes { get; set; }
        public virtual DbSet<StandardPercentages> StandardPercentages { get; set; }
        public virtual DbSet<Statuses> Statuses { get; set; }
        public virtual DbSet<StatusTypes> StatusTypes { get; set; }
        public virtual DbSet<StickingErrors> StickingErrors { get; set; }
        public virtual DbSet<Suppliers> Suppliers { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TempQuotationDetails> TempQuotationDetails { get; set; }
        public virtual DbSet<TempQuotations> TempQuotations { get; set; }
        public virtual DbSet<Types> Types { get; set; }
        public virtual DbSet<UnitConverters> UnitConverters { get; set; }
        public virtual DbSet<Units> Units { get; set; }
        public virtual DbSet<VW_AllQuotations> VW_AllQuotations { get; set; }
        public virtual DbSet<VW_CalculatedDetails> VW_CalculatedDetails { get; set; }
        public virtual DbSet<VW_EmployeesWorkingDayHours> VW_EmployeesWorkingDayHours { get; set; }
        public virtual DbSet<VW_FreeTypeDDT> VW_FreeTypeDDT { get; set; }
        public virtual DbSet<VW_FreeTypePOD> VW_FreeTypePOD { get; set; }
        public virtual DbSet<VW_FreeTypePrepare> VW_FreeTypePrepare { get; set; }
        public virtual DbSet<VW_FreeTypeProductionOrderDetails> VW_FreeTypeProductionOrderDetails { get; set; }
        public virtual DbSet<VW_HitsOfMacroItems> VW_HitsOfMacroItems { get; set; }
        public virtual DbSet<VW_HitsOfPickingItems> VW_HitsOfPickingItems { get; set; }
        public virtual DbSet<VW_MenuItems> VW_MenuItems { get; set; }
        public virtual DbSet<VW_PickingItems> VW_PickingItems { get; set; }
        public virtual DbSet<VW_ProductionOrdersCosts> VW_ProductionOrdersCosts { get; set; }
        public virtual DbSet<VW_QUOPORCostsPrices> VW_QUOPORCostsPrices { get; set; }
        public virtual DbSet<VW_QuotationsCostsPrices> VW_QuotationsCostsPrices { get; set; }
        public virtual DbSet<VW_TempCalculatedDetails> VW_TempCalculatedDetails { get; set; }
        public virtual DbSet<VW_UngroupablePickingItems> VW_UngroupablePickingItems { get; set; }
        public virtual DbSet<CloseOfDays> CloseOfDays { get; set; }
        public virtual DbSet<ProductionOrderDetails> ProductionOrderDetails { get; set; }
        public virtual DbSet<ProductionOrderTechSpecs> ProductionOrderTechSpecs { get; set; }
        public virtual DbSet<ProductionOrders> ProductionOrders { get; set; }
    
        public virtual int prc_LAB_Del_LAB_AllLocks(string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Del_LAB_AllLocks", gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual int prc_LAB_Del_LAB_AllUserLocks(string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Del_LAB_AllUserLocks", gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual int prc_LAB_Del_LAB_Locks(string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Del_LAB_Locks", gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual int prc_LAB_Get_LAB_Lock(Nullable<int> lockTypeCode, Nullable<int> iDRef, string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var lockTypeCodeParameter = lockTypeCode.HasValue ?
                new ObjectParameter("LockTypeCode", lockTypeCode) :
                new ObjectParameter("LockTypeCode", typeof(int));
    
            var iDRefParameter = iDRef.HasValue ?
                new ObjectParameter("IDRef", iDRef) :
                new ObjectParameter("IDRef", typeof(int));
    
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Get_LAB_Lock", lockTypeCodeParameter, iDRefParameter, gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual ObjectResult<prc_LAB_Get_LAB_ProductionOrderByProductionOrderID_Result> prc_LAB_Get_LAB_ProductionOrderByProductionOrderID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_Get_LAB_ProductionOrderByProductionOrderID_Result>("prc_LAB_Get_LAB_ProductionOrderByProductionOrderID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_Get_LAB_QuotationByQuotationID_Result> prc_LAB_Get_LAB_QuotationByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_Get_LAB_QuotationByQuotationID_Result>("prc_LAB_Get_LAB_QuotationByQuotationID", quotationIDParameter);
        }
    
        public virtual int prc_LAB_Ins_LAB_Lock(Nullable<int> lockTypeCode, Nullable<int> iDRef, string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var lockTypeCodeParameter = lockTypeCode.HasValue ?
                new ObjectParameter("LockTypeCode", lockTypeCode) :
                new ObjectParameter("LockTypeCode", typeof(int));
    
            var iDRefParameter = iDRef.HasValue ?
                new ObjectParameter("IDRef", iDRef) :
                new ObjectParameter("IDRef", typeof(int));
    
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Ins_LAB_Lock", lockTypeCodeParameter, iDRefParameter, gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual int prc_LAB_Ins_LAB_SessionLock(string gUIDUser, string sessionID, ObjectParameter procResult)
        {
            var gUIDUserParameter = gUIDUser != null ?
                new ObjectParameter("GUIDUser", gUIDUser) :
                new ObjectParameter("GUIDUser", typeof(string));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_Ins_LAB_SessionLock", gUIDUserParameter, sessionIDParameter, procResult);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_CalculatedDetailsByQuotationID_Result> prc_LAB_MGet_LAB_CalculatedDetailsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_CalculatedDetailsByQuotationID_Result>("prc_LAB_MGet_LAB_CalculatedDetailsByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_CalculatedDetailsByQuotationIDAndAQuantity_Result> prc_LAB_MGet_LAB_CalculatedDetailsByQuotationIDAndAQuantity(Nullable<int> quotationID, Nullable<decimal> quantity)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_CalculatedDetailsByQuotationIDAndAQuantity_Result>("prc_LAB_MGet_LAB_CalculatedDetailsByQuotationIDAndAQuantity", quotationIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_CalculatedDetailsTotalsByQuotationID_Result> prc_LAB_MGet_LAB_CalculatedDetailsTotalsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_CalculatedDetailsTotalsByQuotationID_Result>("prc_LAB_MGet_LAB_CalculatedDetailsTotalsByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_CalculatedDetailsTotalsRoundedByQuotationID_Result> prc_LAB_MGet_LAB_CalculatedDetailsTotalsRoundedByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_CalculatedDetailsTotalsRoundedByQuotationID_Result>("prc_LAB_MGet_LAB_CalculatedDetailsTotalsRoundedByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_CalculatedResultsByQuotationID_Result> prc_LAB_MGet_LAB_CalculatedResultsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_CalculatedResultsByQuotationID_Result>("prc_LAB_MGet_LAB_CalculatedResultsByQuotationID", quotationIDParameter);
        }
    
        public virtual int prc_LAB_MGet_LAB_DNDetailsByPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LAB_MGet_LAB_DNDetailsByPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_NoteByPhaseAndPOID_Result> prc_LAB_MGet_LAB_NoteByPhaseAndPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_NoteByPhaseAndPOID_Result>("prc_LAB_MGet_LAB_NoteByPhaseAndPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PickingItemByTy_ITy_IMa_Tp_Result> prc_LAB_MGet_LAB_PickingItemByTy_ITy_IMa_Tp(Nullable<int> queryCode)
        {
            var queryCodeParameter = queryCode.HasValue ?
                new ObjectParameter("QueryCode", queryCode) :
                new ObjectParameter("QueryCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PickingItemByTy_ITy_IMa_Tp_Result>("prc_LAB_MGet_LAB_PickingItemByTy_ITy_IMa_Tp", queryCodeParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PickingItems_Result> prc_LAB_MGet_LAB_PickingItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PickingItems_Result>("prc_LAB_MGet_LAB_PickingItems");
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsByPhaseAndPOID_Result> prc_LAB_MGet_LAB_PODetailsByPhaseAndPOID(Nullable<int> productionOrderID, Nullable<int> phaseID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsByPhaseAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsByPhaseAndPOID", productionOrderIDParameter, phaseIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsByRawMaterialAndPOID_Result> prc_LAB_MGet_LAB_PODetailsByRawMaterialAndPOID(Nullable<int> productionOrderID, Nullable<int> rawMaterialID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            var rawMaterialIDParameter = rawMaterialID.HasValue ?
                new ObjectParameter("RawMaterialID", rawMaterialID) :
                new ObjectParameter("RawMaterialID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsByRawMaterialAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsByRawMaterialAndPOID", productionOrderIDParameter, rawMaterialIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsBySecMaterialAndPOID_Result> prc_LAB_MGet_LAB_PODetailsBySecMaterialAndPOID(Nullable<int> productionOrderID, Nullable<int> secMaterialID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            var secMaterialIDParameter = secMaterialID.HasValue ?
                new ObjectParameter("SecMaterialID", secMaterialID) :
                new ObjectParameter("SecMaterialID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsBySecMaterialAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsBySecMaterialAndPOID", productionOrderIDParameter, secMaterialIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsGroupedByPhaseAndPOID_Result> prc_LAB_MGet_LAB_PODetailsGroupedByPhaseAndPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsGroupedByPhaseAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsGroupedByPhaseAndPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsGroupedByRawMaterialAndPOID_Result> prc_LAB_MGet_LAB_PODetailsGroupedByRawMaterialAndPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsGroupedByRawMaterialAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsGroupedByRawMaterialAndPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsGroupedBySecMaterialAndPOID_Result> prc_LAB_MGet_LAB_PODetailsGroupedBySecMaterialAndPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsGroupedBySecMaterialAndPOID_Result>("prc_LAB_MGet_LAB_PODetailsGroupedBySecMaterialAndPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsOnlyExtPhasesByPOID_Result> prc_LAB_MGet_LAB_PODetailsOnlyExtPhasesByPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsOnlyExtPhasesByPOID_Result>("prc_LAB_MGet_LAB_PODetailsOnlyExtPhasesByPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsOnlyPhasesByPOID_Result> prc_LAB_MGet_LAB_PODetailsOnlyPhasesByPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsOnlyPhasesByPOID_Result>("prc_LAB_MGet_LAB_PODetailsOnlyPhasesByPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsOnlyRawMaterialByPOID_Result> prc_LAB_MGet_LAB_PODetailsOnlyRawMaterialByPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsOnlyRawMaterialByPOID_Result>("prc_LAB_MGet_LAB_PODetailsOnlyRawMaterialByPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_PODetailsOnlySecMaterialByPOID_Result> prc_LAB_MGet_LAB_PODetailsOnlySecMaterialByPOID(Nullable<int> productionOrderID)
        {
            var productionOrderIDParameter = productionOrderID.HasValue ?
                new ObjectParameter("ProductionOrderID", productionOrderID) :
                new ObjectParameter("ProductionOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_PODetailsOnlySecMaterialByPOID_Result>("prc_LAB_MGet_LAB_PODetailsOnlySecMaterialByPOID", productionOrderIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_ProductionDetailsByQuotationIDandQuantity_Result> prc_LAB_MGet_LAB_ProductionDetailsByQuotationIDandQuantity(Nullable<int> quotationID, Nullable<float> quantity, Nullable<int> idCompany)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(float));
    
            var idCompanyParameter = idCompany.HasValue ?
                new ObjectParameter("IdCompany", idCompany) :
                new ObjectParameter("IdCompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_ProductionDetailsByQuotationIDandQuantity_Result>("prc_LAB_MGet_LAB_ProductionDetailsByQuotationIDandQuantity", quotationIDParameter, quantityParameter, idCompanyParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_ReportTotalsByQuotationID_Result> prc_LAB_MGet_LAB_ReportTotalsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_ReportTotalsByQuotationID_Result>("prc_LAB_MGet_LAB_ReportTotalsByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_ToolsTotalsByQuotationID_Result> prc_LAB_MGet_LAB_ToolsTotalsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_ToolsTotalsByQuotationID_Result>("prc_LAB_MGet_LAB_ToolsTotalsByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_ToolsTotalsByTempQuotationID_Result> prc_LAB_MGet_LAB_ToolsTotalsByTempQuotationID(Nullable<int> tempQuotationID, Nullable<int> sessionUser)
        {
            var tempQuotationIDParameter = tempQuotationID.HasValue ?
                new ObjectParameter("TempQuotationID", tempQuotationID) :
                new ObjectParameter("TempQuotationID", typeof(int));
    
            var sessionUserParameter = sessionUser.HasValue ?
                new ObjectParameter("SessionUser", sessionUser) :
                new ObjectParameter("SessionUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_ToolsTotalsByTempQuotationID_Result>("prc_LAB_MGet_LAB_ToolsTotalsByTempQuotationID", tempQuotationIDParameter, sessionUserParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_TotalsByQuotationID_Result> prc_LAB_MGet_LAB_TotalsByQuotationID(Nullable<int> quotationID)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_TotalsByQuotationID_Result>("prc_LAB_MGet_LAB_TotalsByQuotationID", quotationIDParameter);
        }
    
        public virtual ObjectResult<prc_LAB_MGet_LAB_TotalsByTempQuotationID_Result> prc_LAB_MGet_LAB_TotalsByTempQuotationID(Nullable<int> tempQuotationID, Nullable<int> sessionUser)
        {
            var tempQuotationIDParameter = tempQuotationID.HasValue ?
                new ObjectParameter("TempQuotationID", tempQuotationID) :
                new ObjectParameter("TempQuotationID", typeof(int));
    
            var sessionUserParameter = sessionUser.HasValue ?
                new ObjectParameter("SessionUser", sessionUser) :
                new ObjectParameter("SessionUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_LAB_MGet_LAB_TotalsByTempQuotationID_Result>("prc_LAB_MGet_LAB_TotalsByTempQuotationID", tempQuotationIDParameter, sessionUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prc_LAB_Upd_LAB_LongCompanyName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prc_LAB_Upd_LAB_LongCompanyName");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
