@using System.Drawing
@using CMLabExtim.CustomClasses
@using DevExpress.Office.Utils
@using LabExtimOperator.Models
@using LabExtimOperator.Controllers
@{

    var context = new DLLabExtim.QuotationDataContext();
    DeliveryTripControllerSessionVariables vars = new DeliveryTripControllerSessionVariables();
}

@model DLLabExtim.DeliveryTrip

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "popupDeliveryTrip";
        settings.Width = Unit.Pixel(600); ;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.HeaderText = "Crea nuovo viaggio";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            using (Html.BeginForm("SubmitDeliveryTrip", "DeliveryTrip", FormMethod.Post, new { id = "popupForm", @class = "edit_form" }))
            {
                //Html.Hidden("ID");

                @Html.DevExpress().FormLayout(formLayoutSettings =>
                {
                    formLayoutSettings.Name = "FormLayoutDeliveryTrip";
                    formLayoutSettings.RequiredMarkDisplayMode = RequiredMarkMode.None;
                    formLayoutSettings.Width = Unit.Percentage(100);
                    formLayoutSettings.Height = Unit.Percentage(100);
                    formLayoutSettings.ColCount = 2;

                    formLayoutSettings.Items.Add(itemSettings =>
                    {
                        itemSettings.FieldName = "ID_Owner";
                        itemSettings.Name = "ID_Owner";
                        itemSettings.Caption = "Autista";
                        itemSettings.ColSpan = 2;
                        itemSettings.Visible = true;
                        itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Left;
                        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
                        var comboBoxSetings = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
                        comboBoxSetings.Properties.DataSource = context.Employees.Where(x => x.ID_Company == vars._currentCompanyId).OrderBy(x => x.UniqueName).Select(o => new { ID = o.ID, Description = o.UniqueName }).ToList();
                        comboBoxSetings.Properties.TextField = "Description";
                        comboBoxSetings.Properties.ValueField = "ID";
                        comboBoxSetings.Properties.ValueType = typeof(int);
                        comboBoxSetings.Width = Unit.Percentage(100);
                        comboBoxSetings.PreRender = (sender, e) =>
                        {
                            if (vars._IDmodel != 0)
                            {
                                MVCxComboBox cmb = sender as MVCxComboBox;
                                cmb.Value = vars._IDmodel;
                                cmb.ReadOnly = true;
                            }
                        };
                    });



                    formLayoutSettings.Items.Add(itemSettings =>
                    {
                        itemSettings.FieldName = "CustomerCode";
                        itemSettings.Name = "CustomerCode";
                        itemSettings.Caption = "Cliente";
                        itemSettings.ColSpan = 2;
                        itemSettings.Visible = true;
                        itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Left;
                        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
                        var comboBoxSetings = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
                        comboBoxSetings.Properties.DataSource = context.Customers.Where(x => !x.Name.StartsWith("***") && (x.Code < 200000000 && vars._currentCompanyId == 1) || (x.Code >= 200000000 && vars._currentCompanyId == 2)).OrderBy(x => x.Name).Select(o => new { ID = o.Code, Description = o.Name }).ToList();
                        comboBoxSetings.Properties.TextField = "Description";
                        comboBoxSetings.Properties.ValueField = "ID";
                        comboBoxSetings.Properties.ValueType = typeof(int);
                        comboBoxSetings.Width = Unit.Percentage(100);
                        comboBoxSetings.PreRender = (sender, e) =>
                        {
                            if (vars._IDmodel != 0)
                            {
                                MVCxComboBox cmb = sender as MVCxComboBox;
                                cmb.Value = vars._IDmodel;
                                cmb.ReadOnly = true;
                            }
                        };

                    });

                    formLayoutSettings.Items.Add(itemSettings =>
                    {
                        itemSettings.ColSpan = 2;
                        itemSettings.FieldName = "Description";
                        itemSettings.Caption = "Descrizione";
                        itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Left;
                        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                        var comboBoxSetings = (TextBoxSettings)itemSettings.NestedExtensionSettings;
                        comboBoxSetings.Enabled = true;
                        comboBoxSetings.Width = Unit.Percentage(100);
                    });

                    formLayoutSettings.Items.Add(itemSettings =>
                    {
                        itemSettings.FieldName = "StartDate";
                        itemSettings.Caption = "Data inizio";
                        itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Left;
                        itemSettings.ColSpan = 2;
                        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                        var dateEditProperties = (DateEditSettings)itemSettings.NestedExtensionSettings;
                        dateEditProperties.Properties.EditFormatString = "dd/MM/yyyy";
                        dateEditProperties.Date = vars._currentDate;
                    });

                    formLayoutSettings.Items.Add(itemSettings =>
                    {
                        itemSettings.ColSpan = 2;
                        itemSettings.FieldName = "Note";
                        itemSettings.Caption = "Note";
                        itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Top;
                        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;
                        var comboBoxSetings = (MemoSettings)itemSettings.NestedExtensionSettings;
                        comboBoxSetings.Width = Unit.Percentage(100);
                        comboBoxSetings.Height = Unit.Pixel(50);
                    });

                    formLayoutSettings.Items.Add(i =>
                    {
                        i.ShowCaption = DefaultBoolean.False;
                        i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                        i.SetNestedContent(() =>
                        {
                            Html.DevExpress().Button(
                                buttonSettings =>
                                {
                                    buttonSettings.Name = "btnUpdate";
                                    buttonSettings.ControlStyle.CssClass = "button";
                                    buttonSettings.Width = 100;
                                    buttonSettings.Text = "OK";
                                    buttonSettings.UseSubmitBehavior = true;
                                }
                            ).Render();
                            Html.DevExpress().Button(
                                buttonSettings =>
                                {
                                    buttonSettings.Name = "btnCancel";
                                    buttonSettings.ControlStyle.CssClass = "button";
                                    buttonSettings.Width = 100;
                                    buttonSettings.Text = "Annulla";
                                    buttonSettings.ClientSideEvents.Click = "function(s, e){ popupDeliveryTrip.Hide(); }";
                                }
                            ).Render();
                        });
                    });
                }).Render();
            }
        });

        //settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()
