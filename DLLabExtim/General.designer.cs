#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLLabExtim
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LabExtim")]
	public partial class GeneralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMenuItem(MenuItem instance);
    partial void UpdateMenuItem(MenuItem instance);
    partial void DeleteMenuItem(MenuItem instance);
    partial void InsertImportFieldMappingInfo(ImportFieldMappingInfo instance);
    partial void UpdateImportFieldMappingInfo(ImportFieldMappingInfo instance);
    partial void DeleteImportFieldMappingInfo(ImportFieldMappingInfo instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    #endregion
		
		public GeneralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MenuItem> MenuItems
		{
			get
			{
				return this.GetTable<MenuItem>();
			}
		}
		
		public System.Data.Linq.Table<ImportFieldMappingInfo> ImportFieldMappingInfos
		{
			get
			{
				return this.GetTable<ImportFieldMappingInfo>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configuration
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuItems")]
	public partial class MenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuType;
		
		private string _Position;
		
		private bool _Standard;
		
		private bool _Selectable;
		
		private string _Text;
		
		private string _Value;
		
		private string _ToolTip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuTypeChanging(int value);
    partial void OnMenuTypeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnStandardChanging(bool value);
    partial void OnStandardChanged();
    partial void OnSelectableChanging(bool value);
    partial void OnSelectableChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    #endregion
		
		public MenuItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuType
		{
			get
			{
				return this._MenuType;
			}
			set
			{
				if ((this._MenuType != value))
				{
					this.OnMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._MenuType = value;
					this.SendPropertyChanged("MenuType");
					this.OnMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="Bit NOT NULL")]
		public bool Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selectable", DbType="Bit NOT NULL")]
		public bool Selectable
		{
			get
			{
				return this._Selectable;
			}
			set
			{
				if ((this._Selectable != value))
				{
					this.OnSelectableChanging(value);
					this.SendPropertyChanging();
					this._Selectable = value;
					this.SendPropertyChanged("Selectable");
					this.OnSelectableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(255)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolTip", DbType="NVarChar(1000)")]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this.OnToolTipChanging(value);
					this.SendPropertyChanging();
					this._ToolTip = value;
					this.SendPropertyChanged("ToolTip");
					this.OnToolTipChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportFieldMappingInfo")]
	public partial class ImportFieldMappingInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OriginTableName;
		
		private string _DestTableName;
		
		private string _OriginFieldName;
		
		private string _DestFieldName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOriginTableNameChanging(string value);
    partial void OnOriginTableNameChanged();
    partial void OnDestTableNameChanging(string value);
    partial void OnDestTableNameChanged();
    partial void OnOriginFieldNameChanging(string value);
    partial void OnOriginFieldNameChanged();
    partial void OnDestFieldNameChanging(string value);
    partial void OnDestFieldNameChanged();
    #endregion
		
		public ImportFieldMappingInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginTableName", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OriginTableName
		{
			get
			{
				return this._OriginTableName;
			}
			set
			{
				if ((this._OriginTableName != value))
				{
					this.OnOriginTableNameChanging(value);
					this.SendPropertyChanging();
					this._OriginTableName = value;
					this.SendPropertyChanged("OriginTableName");
					this.OnOriginTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestTableName", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DestTableName
		{
			get
			{
				return this._DestTableName;
			}
			set
			{
				if ((this._DestTableName != value))
				{
					this.OnDestTableNameChanging(value);
					this.SendPropertyChanging();
					this._DestTableName = value;
					this.SendPropertyChanged("DestTableName");
					this.OnDestTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFieldName", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OriginFieldName
		{
			get
			{
				return this._OriginFieldName;
			}
			set
			{
				if ((this._OriginFieldName != value))
				{
					this.OnOriginFieldNameChanging(value);
					this.SendPropertyChanging();
					this._OriginFieldName = value;
					this.SendPropertyChanged("OriginFieldName");
					this.OnOriginFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestFieldName", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DestFieldName
		{
			get
			{
				return this._DestFieldName;
			}
			set
			{
				if ((this._DestFieldName != value))
				{
					this.OnDestFieldNameChanging(value);
					this.SendPropertyChanging();
					this._DestFieldName = value;
					this.SendPropertyChanged("DestFieldName");
					this.OnDestFieldNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConfigKey;
		
		private string _ConfigValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigKeyChanging(string value);
    partial void OnConfigKeyChanged();
    partial void OnConfigValueChanging(string value);
    partial void OnConfigValueChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigKey", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConfigKey
		{
			get
			{
				return this._ConfigKey;
			}
			set
			{
				if ((this._ConfigKey != value))
				{
					this.OnConfigKeyChanging(value);
					this.SendPropertyChanging();
					this._ConfigKey = value;
					this.SendPropertyChanged("ConfigKey");
					this.OnConfigKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigValue", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ConfigValue
		{
			get
			{
				return this._ConfigValue;
			}
			set
			{
				if ((this._ConfigValue != value))
				{
					this.OnConfigValueChanging(value);
					this.SendPropertyChanging();
					this._ConfigValue = value;
					this.SendPropertyChanged("ConfigValue");
					this.OnConfigValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
